{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@across-protocol/=node_modules/@across-protocol/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gnosis.pm/=node_modules/@gnosis.pm/\",\":@maticnetwork/=node_modules/@maticnetwork/\",\":@openzeppelin-up/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uma/=node_modules/@uma/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x055fe4c1e942d42899298a11a5501ed8757b5247d914f500d902fd308f4a169f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://372b878d307d3eb3bd2948ad92653191f38fe0752069015a360466f9f64f6d23\",\"dweb:/ipfs/QmaAbXkUaTNWnG2pNJ3qfaM7nRbktzy7qiWbd1fFZbYvpT\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x5d2b99dff39b05ded4c8eb1298a983dd098cd3ca26869ead974178bd3372d760\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://622c91432052e2072391bc9bf61a610168ec015d1bec8e2bd831f3bb5f440b33\",\"dweb:/ipfs/QmUDrPGTut4VJtWLEbFCaqi1buuD2B6HT1rpCy1Tv43t7Z\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x8c3779e8eb813ea61cc427ef6331ce26480fd3b3e50cd09693a5684c544f8a20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b78242734070278c66466c020a664119cd089b87f19e4113c2dec691429c6f3\",\"dweb:/ipfs/QmU5PCFRbhxkyx1XqANQJGKoshho4zCaVap11T5VjUNYmv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@across-protocol/=node_modules/@across-protocol/",
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@eth-optimism/=node_modules/@eth-optimism/",
        ":@gnosis.pm/=node_modules/@gnosis.pm/",
        ":@maticnetwork/=node_modules/@maticnetwork/",
        ":@openzeppelin-up/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uma/=node_modules/@uma/",
        ":@uniswap/=node_modules/@uniswap/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": "ReentrancyGuardUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x055fe4c1e942d42899298a11a5501ed8757b5247d914f500d902fd308f4a169f",
        "urls": [
          "bzz-raw://372b878d307d3eb3bd2948ad92653191f38fe0752069015a360466f9f64f6d23",
          "dweb:/ipfs/QmaAbXkUaTNWnG2pNJ3qfaM7nRbktzy7qiWbd1fFZbYvpT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x5d2b99dff39b05ded4c8eb1298a983dd098cd3ca26869ead974178bd3372d760",
        "urls": [
          "bzz-raw://622c91432052e2072391bc9bf61a610168ec015d1bec8e2bd831f3bb5f440b33",
          "dweb:/ipfs/QmUDrPGTut4VJtWLEbFCaqi1buuD2B6HT1rpCy1Tv43t7Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x8c3779e8eb813ea61cc427ef6331ce26480fd3b3e50cd09693a5684c544f8a20",
        "urls": [
          "bzz-raw://7b78242734070278c66466c020a664119cd089b87f19e4113c2dec691429c6f3",
          "dweb:/ipfs/QmU5PCFRbhxkyx1XqANQJGKoshho4zCaVap11T5VjUNYmv"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
    "id": 27387,
    "exportedSymbols": {
      "AddressUpgradeable": [
        28246
      ],
      "Initializable": [
        27302
      ],
      "ReentrancyGuardUpgradeable": [
        27386
      ]
    },
    "nodeType": "SourceUnit",
    "src": "112:3550:20",
    "nodes": [
      {
        "id": 27304,
        "nodeType": "PragmaDirective",
        "src": "112:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 27305,
        "nodeType": "ImportDirective",
        "src": "136:42:20",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27387,
        "sourceUnit": 27303,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27386,
        "nodeType": "ContractDefinition",
        "src": "931:2730:20",
        "nodes": [
          {
            "id": 27311,
            "nodeType": "VariableDeclaration",
            "src": "1747:41:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nameLocation": "1772:12:20",
            "scope": 27386,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27309,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1747:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 27310,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1787:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 27314,
            "nodeType": "VariableDeclaration",
            "src": "1794:37:20",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_ENTERED",
            "nameLocation": "1819:8:20",
            "scope": 27386,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1794:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 27313,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1830:1:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "id": 27316,
            "nodeType": "VariableDeclaration",
            "src": "1838:23:20",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_status",
            "nameLocation": "1854:7:20",
            "scope": 27386,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 27315,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1838:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 27325,
            "nodeType": "FunctionDefinition",
            "src": "1868:111:20",
            "nodes": [],
            "body": {
              "id": 27324,
              "nodeType": "Block",
              "src": "1928:51:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27321,
                      "name": "__ReentrancyGuard_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27335,
                      "src": "1938:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1938:34:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27323,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:34:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27319,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27318,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "1911:16:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27247,
                  "src": "1911:16:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1911:16:20"
              }
            ],
            "name": "__ReentrancyGuard_init",
            "nameLocation": "1877:22:20",
            "parameters": {
              "id": 27317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1899:2:20"
            },
            "returnParameters": {
              "id": 27320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1928:0:20"
            },
            "scope": 27386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27335,
            "nodeType": "FunctionDefinition",
            "src": "1985:109:20",
            "nodes": [],
            "body": {
              "id": 27334,
              "nodeType": "Block",
              "src": "2055:39:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27330,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27316,
                      "src": "2065:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27331,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27311,
                      "src": "2075:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2065:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27333,
                  "nodeType": "ExpressionStatement",
                  "src": "2065:22:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 27328,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 27327,
                  "name": "onlyInitializing",
                  "nameLocations": [
                    "2038:16:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27247,
                  "src": "2038:16:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "2038:16:20"
              }
            ],
            "name": "__ReentrancyGuard_init_unchained",
            "nameLocation": "1994:32:20",
            "parameters": {
              "id": 27326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:2:20"
            },
            "returnParameters": {
              "id": 27329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:0:20"
            },
            "scope": 27386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27346,
            "nodeType": "ModifierDefinition",
            "src": "2471:103:20",
            "nodes": [],
            "body": {
              "id": 27345,
              "nodeType": "Block",
              "src": "2495:79:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27338,
                      "name": "_nonReentrantBefore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27361,
                      "src": "2505:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2505:21:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27340,
                  "nodeType": "ExpressionStatement",
                  "src": "2505:21:20"
                },
                {
                  "id": 27341,
                  "nodeType": "PlaceholderStatement",
                  "src": "2536:1:20"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 27342,
                      "name": "_nonReentrantAfter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27369,
                      "src": "2547:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 27343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2547:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27344,
                  "nodeType": "ExpressionStatement",
                  "src": "2547:20:20"
                }
              ]
            },
            "documentation": {
              "id": 27336,
              "nodeType": "StructuredDocumentation",
              "src": "2100:366:20",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "name": "nonReentrant",
            "nameLocation": "2480:12:20",
            "parameters": {
              "id": 27337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:20"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27361,
            "nodeType": "FunctionDefinition",
            "src": "2580:287:20",
            "nodes": [],
            "body": {
              "id": 27360,
              "nodeType": "Block",
              "src": "2619:248:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 27352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 27350,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27316,
                          "src": "2712:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 27351,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27314,
                          "src": "2723:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2712:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "id": 27353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2733:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
                      "id": 27349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2704:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 27354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2704:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27355,
                  "nodeType": "ExpressionStatement",
                  "src": "2704:63:20"
                },
                {
                  "expression": {
                    "id": 27358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27356,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27316,
                      "src": "2842:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27357,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27314,
                      "src": "2852:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2842:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27359,
                  "nodeType": "ExpressionStatement",
                  "src": "2842:18:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nonReentrantBefore",
            "nameLocation": "2589:19:20",
            "parameters": {
              "id": 27347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2608:2:20"
            },
            "returnParameters": {
              "id": 27348,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2619:0:20"
            },
            "scope": 27386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 27369,
            "nodeType": "FunctionDefinition",
            "src": "2873:209:20",
            "nodes": [],
            "body": {
              "id": 27368,
              "nodeType": "Block",
              "src": "2911:171:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27364,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27316,
                      "src": "3053:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 27365,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27311,
                      "src": "3063:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3053:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27367,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:22:20"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_nonReentrantAfter",
            "nameLocation": "2882:18:20",
            "parameters": {
              "id": 27362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2900:2:20"
            },
            "returnParameters": {
              "id": 27363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2911:0:20"
            },
            "scope": 27386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 27380,
            "nodeType": "FunctionDefinition",
            "src": "3261:107:20",
            "nodes": [],
            "body": {
              "id": 27379,
              "nodeType": "Block",
              "src": "3325:43:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 27375,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27316,
                      "src": "3342:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 27376,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27314,
                      "src": "3353:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3342:19:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 27374,
                  "id": 27378,
                  "nodeType": "Return",
                  "src": "3335:26:20"
                }
              ]
            },
            "documentation": {
              "id": 27370,
              "nodeType": "StructuredDocumentation",
              "src": "3088:168:20",
              "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reentrancyGuardEntered",
            "nameLocation": "3270:23:20",
            "parameters": {
              "id": 27371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3293:2:20"
            },
            "returnParameters": {
              "id": 27374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27380,
                  "src": "3319:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3319:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3318:6:20"
            },
            "scope": 27386,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 27385,
            "nodeType": "VariableDeclaration",
            "src": "3633:25:20",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 27381,
              "nodeType": "StructuredDocumentation",
              "src": "3374:254:20",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3653:5:20",
            "scope": 27386,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 27382,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3633:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 27384,
              "length": {
                "hexValue": "3439",
                "id": 27383,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3641:2:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3633:11:20",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 27307,
              "name": "Initializable",
              "nameLocations": [
                "979:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27302,
              "src": "979:13:20"
            },
            "id": 27308,
            "nodeType": "InheritanceSpecifier",
            "src": "979:13:20"
          }
        ],
        "canonicalName": "ReentrancyGuardUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 27306,
          "nodeType": "StructuredDocumentation",
          "src": "180:750:20",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27386,
          27302
        ],
        "name": "ReentrancyGuardUpgradeable",
        "nameLocation": "949:26:20",
        "scope": 27387,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 20
}